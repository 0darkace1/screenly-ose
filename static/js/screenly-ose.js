// Generated by CoffeeScript 1.4.0
(function() {
  var ActiveAssetRowView, ActiveAssets, AddAssetModalView, Asset, Assets, AssetsView, EditAssetModalView, InactiveAssetRowView, InactiveAssets, _ref, _ref1, _ref2, _ref3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  this.screenly = (_ref = window.screenly) != null ? _ref : {};

  this.screenly.collections = (_ref1 = window.screenly.collections) != null ? _ref1 : {};

  this.screenly.views = (_ref2 = window.screenly.views) != null ? _ref2 : {};

  this.screenly.models = (_ref3 = window.screenly.models) != null ? _ref3 : {};

  Asset = (function(_super) {

    __extends(Asset, _super);

    function Asset() {
      return Asset.__super__.constructor.apply(this, arguments);
    }

    Asset.prototype.url = function() {
      if (this.get('asset_id')) {
        return "/api/assets/" + asset_id;
      }
    };

    return Asset;

  })(Backbone.Model);

  screenly.models.Asset = Asset;

  Assets = (function(_super) {

    __extends(Assets, _super);

    function Assets() {
      return Assets.__super__.constructor.apply(this, arguments);
    }

    Assets.prototype.url = "/api/assets";

    Assets.prototype.model = Asset;

    Assets.prototype.initialize = function(options) {
      return this.on("reset", function() {
        screenly.ActiveAssets.reset();
        screenly.InactiveAssets.reset();
        return this.each(function(model) {
          if (model.get('is_active')) {
            return screenly.ActiveAssets.add(model);
          } else {
            return screenly.InactiveAssets.add(model);
          }
        });
      });
    };

    return Assets;

  })(Backbone.Collection);

  screenly.Assets = new Assets();

  ActiveAssets = (function(_super) {

    __extends(ActiveAssets, _super);

    function ActiveAssets() {
      return ActiveAssets.__super__.constructor.apply(this, arguments);
    }

    ActiveAssets.prototype.model = Asset;

    return ActiveAssets;

  })(Backbone.Collection);

  InactiveAssets = (function(_super) {

    __extends(InactiveAssets, _super);

    function InactiveAssets() {
      return InactiveAssets.__super__.constructor.apply(this, arguments);
    }

    InactiveAssets.prototype.model = Asset;

    return InactiveAssets;

  })(Backbone.Collection);

  screenly.collections.Assets = Assets;

  screenly.collections.ActiveAssets = ActiveAssets;

  screenly.collections.InactiveAssets = InactiveAssets;

  screenly.ActiveAssets = new ActiveAssets();

  screenly.InactiveAssets = new InactiveAssets();

  AddAssetModalView = (function(_super) {

    __extends(AddAssetModalView, _super);

    function AddAssetModalView() {
      return AddAssetModalView.__super__.constructor.apply(this, arguments);
    }

    AddAssetModalView.prototype.initialize = function(options) {
      return this.template = _.template($('#add-asset-modal-template').html());
    };

    AddAssetModalView.prototype.render = function() {
      $(this.el).html(this.template());
      return this;
    };

    return AddAssetModalView;

  })(Backbone.View);

  screenly.views.AddAssetModalView = AddAssetModalView;

  EditAssetModalView = (function(_super) {

    __extends(EditAssetModalView, _super);

    function EditAssetModalView() {
      return EditAssetModalView.__super__.constructor.apply(this, arguments);
    }

    return EditAssetModalView;

  })(Backbone.View);

  AssetsView = (function(_super) {

    __extends(AssetsView, _super);

    function AssetsView() {
      return AssetsView.__super__.constructor.apply(this, arguments);
    }

    AssetsView.prototype.initialize = function(options) {
      var _ref4, _ref5;
      if (_ref4 = !'template_name', __indexOf.call(options, _ref4) >= 0) {
        console.log("You need to specify the template name for this AssetsView.");
      }
      if (_ref5 = !'childViewClass', __indexOf.call(options, _ref5) >= 0) {
        console.log("You must specify the child view class for this AssetsView.");
      }
      this.template = _.template($('#' + options.template_name).html());
      this.collection.bind("reset", this.render, this);
      this.collection.bind("remove", this.render, this);
      return this.collection.bind("add", this.render, this);
    };

    AssetsView.prototype.render = function() {
      var _this = this;
      $(this.el).html(this.template());
      this.$('tbody').empty();
      this.collection.each(function(asset) {
        return _this.$('tbody').append((new _this.options['childViewClass']({
          model: asset
        })).render().el);
      });
      return this;
    };

    return AssetsView;

  })(Backbone.View);

  ActiveAssetRowView = (function(_super) {

    __extends(ActiveAssetRowView, _super);

    function ActiveAssetRowView() {
      return ActiveAssetRowView.__super__.constructor.apply(this, arguments);
    }

    ActiveAssetRowView.prototype.initialize = function(options) {
      return this.template = _.template($('#active-asset-row-template').html());
    };

    ActiveAssetRowView.prototype.events = {
      'click #deactivate': 'deactivateAsset'
    };

    ActiveAssetRowView.prototype.tagName = "tr";

    ActiveAssetRowView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      return this;
    };

    ActiveAssetRowView.prototype.deactivateAsset = function(event) {
      event.preventDefault();
      screenly.ActiveAssets.remove(this.model);
      return screenly.InactiveAssets.add(this.model);
    };

    return ActiveAssetRowView;

  })(Backbone.View);

  InactiveAssetRowView = (function(_super) {

    __extends(InactiveAssetRowView, _super);

    function InactiveAssetRowView() {
      return InactiveAssetRowView.__super__.constructor.apply(this, arguments);
    }

    InactiveAssetRowView.prototype.initialize = function(options) {
      return this.template = _.template($('#inactive-asset-row-template').html());
    };

    InactiveAssetRowView.prototype.events = {
      'click #activate': 'activateAsset'
    };

    InactiveAssetRowView.prototype.tagName = "tr";

    InactiveAssetRowView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      return this;
    };

    InactiveAssetRowView.prototype.activateAsset = function(event) {
      event.preventDefault();
      screenly.InactiveAssets.remove(this.model);
      return screenly.ActiveAssets.add(this.model);
    };

    return InactiveAssetRowView;

  })(Backbone.View);

  screenly.views.AssetsView = AssetsView;

  screenly.views.ActiveAssetRowView = ActiveAssetRowView;

  jQuery(function() {
    var activeAssetsView, inactiveAssetsView;
    screenly.Assets.fetch();
    activeAssetsView = new AssetsView({
      collection: screenly.ActiveAssets,
      template_name: "active-assets-template",
      childViewClass: ActiveAssetRowView
    });
    inactiveAssetsView = new AssetsView({
      collection: screenly.InactiveAssets,
      template_name: "inactive-assets-template",
      childViewClass: InactiveAssetRowView
    });
    $("#active-assets-container").append(activeAssetsView.render().el);
    $("#inactive-assets-container").append(inactiveAssetsView.render().el);
    return $("#add-asset-button").click(function() {
      var modal;
      console.log("Clicked add asset button");
      modal = new AddAssetModalView();
      $("body").append(modal.render().el);
      return $(modal.el).children(":first").modal();
    });
  });

}).call(this);
