// Generated by CoffeeScript 1.7.1
(function() {
  describe("Screenly Open Source", function() {
    it("should have a Screenly object at its root", function() {
      return expect(Screenly).toBeDefined();
    });
    describe("date_to", function() {
      var dd, testDate;
      testDate = new Date(2014, 5, 6, 14, 20, 0, 0);
      dd = Screenly.date_to(testDate);
      it("should format date and time as 'MM/DD/YYYY hh:mm:ss A'", function() {
        return expect(dd.string()).toBe('06/06/2014 02:20:00 PM');
      });
      it("should format date as 'MM/DD/YYYY'", function() {
        return expect(dd.date()).toBe('06/06/2014');
      });
      return it("should format date as 'hh:mm:ss A'", function() {
        return expect(dd.time()).toBe('02:20 PM');
      });
    });
    describe("Models", function() {
      return describe("Asset model", function() {
        return it("should exist", function() {
          return expect(Screenly.Asset).toBeDefined();
        });
      });
    });
    describe("Collections", function() {
      return describe("Assets", function() {
        it("should exist", function() {
          return expect(Screenly.Assets).toBeDefined();
        });
        return it("should use the Asset model", function() {
          var assets;
          assets = new Screenly.Assets();
          return expect(assets.model).toBe(Screenly.Asset);
        });
      });
    });
    return describe("Views", function() {
      it("should have EditAssetView", function() {
        return expect(Screenly.View.EditAssetView).toBeDefined();
      });
      it("should have AssetRowView", function() {
        return expect(Screenly.View.AssetRowView).toBeDefined();
      });
      return it("should have AssetsView", function() {
        return expect(Screenly.View.AssetsView).toBeDefined();
      });
    });
  });

}).call(this);
