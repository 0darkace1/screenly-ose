// Generated by CoffeeScript 1.4.0
(function(){describe("Screenly Open Source",function(){it("should have a screenly object at its root",function(){return expect(screenly).toBeDefined()});it("should have an instance of Assets on the screenly object",function(){expect(screenly.Assets).toBeDefined();expect(screenly.Assets).toEqual(jasmine.any(screenly.collections.Assets));expect(screenly.ActiveAssets).toEqual(jasmine.any(screenly.collections.ActiveAssets));return expect(screenly.InactiveAssets).toEqual(jasmine.any(screenly.collections.InactiveAssets))});describe("Models",function(){it("should exist",function(){return expect(screenly.models).toBeDefined()});return describe("Asset model",function(){return it("should exist",function(){return expect(screenly.models.Asset).toBeDefined()})})});describe("Collections",function(){it("should exist",function(){return expect(screenly.collections).toBeDefined()});return describe("Assets",function(){it("should exist",function(){expect(screenly.collections.Assets).toBeDefined();expect(screenly.collections.ActiveAssets).toBeDefined();return expect(screenly.collections.InactiveAssets).toBeDefined()});it("should use the Asset model",function(){var e;e=new screenly.collections.Assets;return expect(e.model).toBe(screenly.models.Asset)});return it("should populate ActiveAssets and InactiveAssets when fetched",function(){screenly.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!0}]);expect(screenly.ActiveAssets.models.length).toEqual(1);expect(screenly.InactiveAssets.models.length).toEqual(0);screenly.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!1}]);expect(screenly.ActiveAssets.models.length).toEqual(0);expect(screenly.InactiveAssets.models.length).toEqual(1);screenly.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!1},{name:"Hacker News",mimetype:"webpage",is_active:!0}]);expect(screenly.ActiveAssets.models.length).toEqual(1);expect(screenly.InactiveAssets.models.length).toEqual(1);return expect(screenly.Assets.models.length).toEqual(2)})})});return describe("Views",function(){return it("should exist",function(){return expect(screenly.views).toBeDefined()})})})}).call(this);