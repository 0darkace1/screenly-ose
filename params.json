{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Screenly-ose","tagline":"Screenly OSE -- Digital Signage for the Raspberry Pi","body":"# Screenly OSE -- Digital Signage for the Raspberry Pi\r\n\r\nWhen we started [Skarmverket](http://skarmverket.se), a small network of public billboards in Sweden, we evaluated many of the existing solutions on the market. Most of them were clunky and/or expensive. A fair number of them ran on Windows and used Adobe Flash. We ended up writing our own solution and used Asus Eee PCs with Linux. \r\n\r\nThen the [Raspberry Pi](http://www.raspberrypi.org/) came along. Priced at $35, and equipped with everything needed to power a screen. We were immediatelly sold and knew that this was what we wanted to use moving forward. Since we love Open Source, we've decided to release Screenly for free for anyone to use. \r\n\r\nThe current version should be consider a beta. While we have been running it in the lab without any issues, there might still be issues that we are unaware of at this point. Yet, we wanted to make Screenly available to the vibrant Rasberry Pi community.\r\n\r\nSince Screenly was written for the Raspberry Pi from the ground up, we had to make it as lean as possible. \r\n\r\nThere are many use cases where Screenly can be used, such as:\r\n\r\n * Display BI or server dashboards\r\n * Advertisements (in-store or in store-front)\r\n * Internal information boards\r\n * Fancy photo-frame\r\n\r\nA rought video of Screenly in action is available [here](http://www.youtube.com/watch?v=yjDjEfhspxk).\r\n\r\nScreenshots and pictures of Screenly are available [here](https://picasaweb.google.com/102112347693505491575/Screenly01?authkey=Gv1sRgCNa2qp-j5vWUGQ).\r\n\r\n## How Screenly works\r\n\r\nOnce installed, Screenly can view images, videos and websites on the screen. You can configure your own playlist, and set the duration for how long each element should be viewed.\r\n\r\nHere's how you add content to your Screenly box:\r\n\r\n * Point your browser to the URL displayed on the screen at boot.\r\n * Click 'Add asset.'\r\n  * Provide a name of the asset, the URL to the asset, and the asset type and click 'Submit.'\r\n * Click 'Schedule asset.'\r\n  * Select the asset you just added in the drop-down, select the time frame you wish to display the asset and the duration (if image or website) and press 'Submit.'\r\n * Repeate for all the assets you want to display.\r\n\r\nNote: If you don't have any server where you can make your asset available, you can use [public folders](https://www.dropbox.com/help/16/en) in Dropbox. \r\n\r\n## Requirements\r\n\r\n * A Raspberry Pi (Model B).\r\n * An SD Card (>2GB).\r\n * A HDMI-cable.\r\n * A network connection (with DHCP).\r\n * A Keyboard and mouse (only required for the installation).\r\n * A monitor/TV that can view full HD (and has HDMI input).\r\n\r\n## Configure the Raspberry Pi\r\n\r\n * Flash the SD card and install [Raspbian Wheezy](http://www.raspberrypi.org/downloads). Instructions are available [here](http://elinux.org/RPi_Easy_SD_Card_Setup).\r\n * Configure Raspbian to automatically log into X.\r\n * Make sure that the system's clock is configured for the proper timezone.\r\n * Expand the filesystem if needed. \r\n\r\nPlease note that Screenly currently relies on the user 'pi', so don't change the username.\r\n\r\n## Install Screenly OSE\r\n \r\nOpen a terminal-window (or SSH-session) and as the user 'pi' run:\r\n\r\n    cd ~\r\n    sudo apt-get update\r\n    sudo apt-get -y install git-core\r\n    git clone git@github.com:wireload/screenly-ose.git ~/screenly\r\n    ~/screenly/misc/install.sh\r\n\r\nAssuming everything went well, reboot your system. Screenly should now load. \r\n\r\nUpon boot, Screenly's URL should show up on the screen (e.g. http://aaa.bbb.ccc.ddd:8080).\r\n\r\n## Supported media\r\n\r\nScreenly currently three types of media:\r\n\r\n * Videos\r\n  * Screenly uses [omxplayer](https://github.com/huceke/omxplayer/) as the video back-end. It is currently limited to MP4/h264-encoded videos.\r\n * Images\r\n * Web-pages\r\n\r\nAdobe Flash-media *is not* supported. \r\n\r\nImages and web-pages will be rendered in 1920x1080, so adjust your content for this size. \r\n\r\nIt is also worth noting that no media is permanently stored on the Raspberry Pi. All content is simply retrieved from the remote server (with limited caching in the browser).\r\n\r\n## Upgrade Screenly\r\n\r\nSince Screenly still is in beta, it's not unlikely that you'll run across bugs.\r\n\r\nTo upgrade Screenly, simply run (as the user 'pi'):\r\n\r\n    cd ~/screenly\r\n    git pull\r\n\r\nOnce done, simply restart the computer. If you prefer not to reboot, you might get away with (depending on the update):\r\n\r\n    pkill -f \"viewer.py\"\r\n    \r\n## Licensing\r\n\r\nDual License: [GPLv2](http://www.gnu.org/licenses/gpl-2.0.html) and Commercial License. For more information, contact [WireLoad](http://wireload.net/company/). "}